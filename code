function autoFillGoogleDocFromForm(e) {

//e.values is an array of form values
var itcChairs=['email']; //Insert the ITC Chair(s) email(s) in single quotes with a comma in between

//Requestor Information
var timestamp=e.values[0];
var lastName=e.values[2];
var firstName=e.values[3];
var department=e.values[6];
var emailAddress=e.values[4];
var phone=e.values[5];

//Software Needs & Demo Info
var softwareNeed=e.values[7];
var solutions=e.values[8];
var dataCollection=e.values[9];
var slt=e.values[10];
var budget=e.values[11];
var itMember=e.values[12];
var integrationDiscussion=e.values[13];
var implementationDiscussion=e.values[14];

/*New Software Information
var venderName=e.values[7];
var softwareName=e.values[8];
var softwareDescription=e.values[9];
*/

//Used for checkboxquestion
//var checkboxQuestion=e.values[5];


//file is the template file, and you get it by ID
var file = DriveApp.getFileById('1s0uMe4b85rxj7VmTslZTGHJ0c8SidxVoFwbCOPlKpGc');

//We can make a copy of the template, name it, and optionally tell it what folder to live in
//file.makeCopy will return a Google Drive file object
var folder = DriveApp.getFolderById('1j1A9MjIZOF51nHOucP1cRh6oIfoK8I6U');
var copy = file.makeCopy(lastName + ', ' + firstName, folder);

//Once we've got the new file created, we need to open it as a document by using its ID
var doc = DocumentApp.openById(copy.getId());

//Since everything we need to change is in the body, we need to get that
var body = doc.getBody();

//Then we call all of our replaceText methods

//Requestor Information
body.replaceText('{{Timestamp}}',timestamp)
body.replaceText('{{First Name}}', firstName); 
body.replaceText('{{Last Name}}', lastName);  
body.replaceText('{{Department}}', department);
body.replaceText('{{Email}}', emailAddress);
body.replaceText('{{Phone}}', phone);


//Software Needs & Demo Info
body.replaceText('{{Software Need}}',softwareNeed);
body.replaceText('{{Solutions}}',solutions);
body.replaceText('{{Data Collection}}',dataCollection);
body.replaceText('{{SLT}}',slt);
body.replaceText('{{Budget}}',budget);
body.replaceText('{{IT Member}}',itMember);
body.replaceText('{{Integration Discussion}}',integrationDiscussion);
body.replaceText('{{Implementation Discussion}}',implementationDiscussion);



//Checkbox (THIS WORKS)
/*
if(checkboxQuestion == "Yes"){
  body.replaceText('{{Checkbox Question}}',"\u2611" + " " + checkboxQuestion)
} else if(checkboxQuestion !== "Yes") {
  body.replaceText('{{Checkbox Question}}',"\u25FB" + " "+ "Yes")
};
body.replaceText('{{Checkbox Question}}', checkboxQuestion);
*/


/*New Software Information
body.replaceText('{{Vendor Name}}', venderName);
body.replaceText('{{Software Name}}',softwareName);
body.replaceText('{{Software Description}}', softwareDescription);
*/

//Sharing the new doc with the submitter and the co-chair(s) of ITC
doc.addEditor(emailAddress);
doc.addEditors(itcChairs);

//Emailing notice of the new doc to the submitter and co-chair(s) of ITC
//GmailApp.sendEmail()

//Lastly we save and close the document to persist our changes
doc.saveAndClose(); 


//
var docUrl = doc.getUrl();

//Email after filled out
var doc = DocumentApp.getActiveDocument();
var subject = "New Software Request Sumitted";
//var message = "Dear " + firstName + ",\n\nThank you for submitting the request for new software:" + docUrl;

//
var message = "Dear " + firstName + ",<br><br>Thank you for submitting the request for new software. You can <a href='" + docUrl + "'>click here</a> to view the document.";


//
MailApp.sendEmail({
  to: emailAddress,
  subject: subject,
  htmlBody: message,
  //attachments: [doc.getAs('application/pdf')],
  name: "ITC Team"
});


}


